security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers:
                    - 'app_user_provider'
                    - 'discord_user_provider'
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        discord_user_provider:
            id: App\Security\DiscordUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\DiscordAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: app_login
            user_checker: App\Security\UserChecker
            remember_me:
                secret: '%kernel.secret%'
                name: 'REMEMBERME'
                lifetime: 604800 # 1 week in seconds
                path: /
                samesite: 'lax'
                httponly: true
                secure: true
                always_remember_me: false
                remember_me_parameter: '_remember_me'
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'
            # access_denied_url: test_denied

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: [ROLE_WRITER]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
