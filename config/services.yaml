# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.sender_email: '%env(MAILER_SENDER_EMAIL)%'
    app.sender_name: '%env(MAILER_SENDER_NAME)%'
    env(MAINTENANCE_MODE): "false"
    app.maintenance_mode: '%env(bool:MAINTENANCE_MODE)%'
    app.maintenance_supported_ip: ['127.0.0.1']
    app.hcaptcha_private_key: '%env(HCAPTCHA_PRIVATE_KEY)%'
    app.discord_client_id: '%env(DISCORD_CLIENT_ID)%'
    app.discord_client_secret: '%env(DISCORD_CLIENT_SECRET)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $uploadDir: '%kernel.project_dir%/public/uploads'
            $dataDir: '%kernel.project_dir%/public/data'
            $maintenanceMode: '%kernel.project_dir%/public/.maintenance-ON'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider: ~

    App\EventListener\UserPasswordEncoderListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\User'}
            - { name: 'doctrine.orm.entity_listener', event: 'preUpdate', entity: 'App\Entity\User'}

    App\Handler\:
        resource: '../src/Handler/'
        shared: false
        tags: ['app.handler']

    App\Service\SendMail:
        arguments:
            $senderEmail: '%app.sender_email%'
            $senderName: '%app.sender_name%'

    App\Service\HCaptcha:
        arguments:
            $privateKey: '%app.hcaptcha_private_key%'

    App\Security\DiscordUserProvider:
        arguments:
            $discordClientId: '%app.discord_client_id%'
            $discordClientSecret: '%app.discord_client_secret%'